<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<!--  
		* root-context.xml
		서버 구동과 동시에 web.xml 파일을 거쳐서 로딩되는 문서 == preloading
		=> 서버가 구동되면서 세팅되어야 하는 (Bean 등록) 내용들을 작성 (DB 접속, 트랜잭션 처리, 외부 모듈 연결 등등)
	-->
	
	<!-- bean: Spring이 생명 주기를 관리하는 객체  -->	
	<!-- FQCN(Fully Qualified Class Name): 패키지 경로부터 클래스 이름까지 -->
	<bean class="org.apache.commons.dbcp.BasicDataSource"
		  id="dataSource"
		  destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<property name="url" value="jdbc:oracle:thin:@112.221.156.34:12345:XE"/>
		<property name="username" value="KH24_JAR"/>
		<property name="password" value="KH1234"/>
	</bean>
	
	<!--   
		DataSource dataSource = new BasicDataSource();
		dataSource.setDriverClassName("oracle.jdbc.driver.OracleDriver");
		dataSource.setUrl("jdbc:oracle:thin:@112.221.156.34:12345:XE");
		dataSource.setUsername("KH24_JAR");
		dataSource.setPassword("KH1234");
	-->
	
	<bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactory">
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<bean class="org.mybatis.spring.SqlSessionTemplate" id="sqlSession">
		<constructor-arg ref="sqlSessionFactory"/>
	</bean>
	<!--  
		SqlSession sqlSession = new SqlSessionTemplate(sqlSessionFactory);
	-->
	
	<!-- mapper가 존재하는 패키지 -->
	<mybatis-spring:scan base-package="com.kh.spring.member.model.dao"/>
	
	<!-- 파일 업로드 관련 bean 등록 -->
	<bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
		  id="multipartResolver">
		<property name="maxUploadSize" value="100000000"/>
		<property name="maxInMemorySize" value="100000000"/>
	</bean>
	
</beans>
